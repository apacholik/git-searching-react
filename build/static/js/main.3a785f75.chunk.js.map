{"version":3,"sources":["components/ResultTable/TableHead.jsx","components/ResultTable/index.jsx","components/SearchBar.jsx","components/Pagination.jsx","components/SelectorHowRows.jsx","App.js","index.js"],"names":["TableHead","_ref","children","onClick","className","sortIco","sortIcons","react_default","a","createElement","key","undefined","Number","ResultTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","sort","by","isOrderByDESC","type","sortBy","_this2","arguments","length","setState","prevState","onChangeSorting","objectSpread","_this3","resultModifier","convertFunction","Function","concat","b","_this4","sorting","numberOfRows","tableHeadStructure","map","item","name","changeSorting","text","slice","startItemBy","row","id","title","owner","stars","createAt","React","Component","SearchBar","render","placeholder","onChange","delayForWriteEnd","ref","inputRef","timeoutFingerprint","createRef","clearInterval","setTimeout","ReferenceError","current","value","Pagination","_this$props","pagesNumber","actualPage","buttons","_loop","i","push","SelectorHowRows","maxNumberOfRows","stepBy","options","e","target","App","githubRepos","pages","startShowResultByItem","requestStorage","query","searchParameters","URLSearchParams","set","resultQuery","items","fetch","toString","then","res","json","prewState","createdDate","Date","created_at","login","stargazers_count","getFullYear","getMonth","getDate","errors","forEach","element","message","alert","window","scrollTo","newNumber","_newNumber","parseInt","Math","round","goToPage","SearchBar_SearchBar","searchInGithubRepositories","SelectorHowRows_SelectorHowRows","changeNumberOfShownRows","ResultTable_ResultTable","Pagination_Pagination","newPage","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3a785f75.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default ({ children, onClick, className, sortIco }) => {\r\n  const sortIcons = [\r\n    <span key=\"desc\" className=\"icon\">\r\n      <i className=\"fas fa-sort-down\" />\r\n    </span>,\r\n    <span key=\"asc\" className=\"icon\">\r\n      <i className=\"fas fa-sort-up\" />\r\n    </span>,\r\n  ];\r\n  return (\r\n    <th\r\n      className={className === undefined ? 'has-text-centered' : className}\r\n      onClick={() => onClick()}\r\n    >\r\n      {sortIco !== undefined ? sortIcons[Number(sortIco)] : ''}\r\n      {children}\r\n    </th>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport TableHead from './TableHead.jsx';\r\n\r\nexport default class ResultTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sort: {\r\n        by: 'stars',\r\n        isOrderByDESC: true,\r\n        type: 'Number',\r\n      },\r\n    };\r\n  }\r\n\r\n  changeSorting(sortBy, type = '') {\r\n    if (sortBy === this.state.sort.by)\r\n      this.setState(\r\n        prevState => ({\r\n          sort: {\r\n            by: prevState.sort.by,\r\n            isOrderByDESC: !prevState.sort.isOrderByDESC,\r\n            type: prevState.sort.type,\r\n          },\r\n        }),\r\n        () => {\r\n          if (this.props.onChangeSorting)\r\n            this.props.onChangeSorting({ ...this.state.sort });\r\n        }\r\n      );\r\n    else\r\n      this.setState(\r\n        () => ({\r\n          sort: {\r\n            by: sortBy,\r\n            isOrderByDESC: true,\r\n            type,\r\n          },\r\n        }),\r\n        () => {\r\n          if (this.props.onChangeSorting)\r\n            this.props.onChangeSorting({ ...this.state.sort });\r\n        }\r\n      );\r\n  }\r\n\r\n  sorting() {\r\n    let resultModifier = this.state.sort.isOrderByDESC ? -1 : 1;\r\n    if (this.state.sort.type === 'String') resultModifier *= -1;\r\n    // eslint-disable-next-line no-new-func\r\n    const convertFunction = Function(`return ${this.state.sort.type}`)();\r\n    this.props.children.sort((a, b) => {\r\n      if (\r\n        convertFunction(a[this.state.sort.by]) ===\r\n        convertFunction(b[this.state.sort.by])\r\n      )\r\n        return 0;\r\n      if (\r\n        convertFunction(a[this.state.sort.by]) >\r\n        convertFunction(b[this.state.sort.by])\r\n      )\r\n        return 1 * resultModifier;\r\n      return -1 * resultModifier;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    this.sorting();\r\n    const numberOfRows = this.props.numberOfRows || 5;\r\n    return (\r\n      <table className=\"table is-fullwidth table is-bordered\">\r\n        <thead>\r\n          <tr>\r\n            {this.props.tableHeadStructure.map(item => (\r\n              <TableHead\r\n                key={item.name}\r\n                onClick={() => this.changeSorting(item.name, item.type)}\r\n                sortIco={\r\n                  this.state.sort.by === item.name\r\n                    ? this.state.sort.isOrderByDESC\r\n                    : undefined\r\n                }\r\n              >\r\n                {item.text}\r\n              </TableHead>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.children\r\n            .slice(\r\n              this.props.startItemBy,\r\n              numberOfRows + this.props.startItemBy\r\n            )\r\n            .map(row => (\r\n              <tr key={row.id}>\r\n                <td className=\"has-text-centered\">{row.id}</td>\r\n                <td className=\"has-text-centered\">{row.title}</td>\r\n                <td className=\"has-text-centered\">{row.owner}</td>\r\n                <td className=\"has-text-centered\">{row.stars}</td>\r\n                <td className=\"has-text-centered\">{row.createAt}</td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class SearchBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.timeoutFingerprint = null;\r\n    this.inputRef = new React.createRef();\r\n  }\r\n\r\n  delayForWriteEnd() {\r\n    clearInterval(this.timeoutFingerprint);\r\n    this.timeoutFingerprint = setTimeout(() => {\r\n      clearInterval(this.timeoutFingerprint);\r\n      if (!this.props.onChange)\r\n        throw new ReferenceError('Not add props onChange');\r\n      this.props.onChange(this.inputRef.current.value);\r\n    }, 1500);\r\n  }\r\n\r\n  render = () => (\r\n    <div className=\"control has-icons-right\">\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        onChange={() => this.delayForWriteEnd()}\r\n        ref={this.inputRef}\r\n      />\r\n      <span className=\"icon is-small is-right\">\r\n        <i className=\"fas fa-search\" />\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Pagination extends Component {\r\n  render() {\r\n    const { pagesNumber, onClick } = this.props;\r\n    const actualPage = this.props.actualPage || 1;\r\n    if (!onClick) throw new ReferenceError('Not add props onChange');\r\n    const buttons = [];\r\n    for (let i = 1; i <= pagesNumber; i++)\r\n      buttons.push(\r\n        // eslint-disable-next-line react/button-has-type\r\n        <button\r\n          key={i}\r\n          className={`button is-text ${actualPage === i ? 'is-active' : ''}`}\r\n          onClick={() => onClick(i)}\r\n        >\r\n          {i}\r\n        </button>\r\n      );\r\n    return buttons;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class SelectorHowRows extends Component {\r\n  render() {\r\n    const { maxNumberOfRows, stepBy } = this.props;\r\n    const options = [];\r\n    for (let i = stepBy; i <= maxNumberOfRows; i += stepBy) {\r\n      options.push(\r\n        <option key={i} value={i}>\r\n          {i}\r\n        </option>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"select is-small\">\r\n        <select\r\n          onChange={e => {\r\n            this.props.onChange(e.target.value);\r\n          }}\r\n        >\r\n          {options}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport 'bulma';\r\nimport '@fortawesome/fontawesome-free/js/all';\r\n// eslint-disable-next-line import/no-unresolved\r\nimport ResultTable from './components/ResultTable';\r\nimport SearchBar from './components/SearchBar.jsx';\r\nimport Pagination from './components/Pagination.jsx';\r\nimport SelectorHowRows from './components/SelectorHowRows.jsx';\r\n\r\nconst GITHUB_SEARCH_URL = 'https://api.github.com/search/repositories';\r\nconst GITHUB_BASES_PARAMETERS = 'q=test&sort=stars&order=desc&page=1';\r\n\r\nclass App extends Component {\r\n  // eslint-disable-next-line no-useless-constructor\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      githubRepos: [],\r\n      pages: 0,\r\n      actualPage: 1,\r\n      startShowResultByItem: 0,\r\n      numberOfRows: 5,\r\n      tableHeadStructure: [\r\n        {\r\n          name: 'id',\r\n          type: 'Number',\r\n          text: 'ID',\r\n        },\r\n        {\r\n          name: 'title',\r\n          type: 'String',\r\n          text: 'Repo Title',\r\n        },\r\n        {\r\n          name: 'owner',\r\n          type: 'String',\r\n          text: 'Owner',\r\n        },\r\n        {\r\n          name: 'stars',\r\n          type: 'Number',\r\n          text: 'Stars',\r\n        },\r\n        {\r\n          name: 'createAt',\r\n          type: 'String',\r\n          text: 'Create at',\r\n        },\r\n      ],\r\n    };\r\n    this.requestStorage = {};\r\n  }\r\n\r\n  async searchInGithubRepositories(query) {\r\n    this.searchParameters = new URLSearchParams(GITHUB_BASES_PARAMETERS);\r\n    this.searchParameters.set('q', query);\r\n    let resultQuery = {};\r\n    if (this.requestStorage[query] !== undefined)\r\n      resultQuery.items = this.requestStorage[query];\r\n    else\r\n      resultQuery = await fetch(\r\n        `${GITHUB_SEARCH_URL}?${this.searchParameters.toString()}`\r\n      ).then(res => res.json());\r\n    if (resultQuery.items) {\r\n      this.requestStorage[query] = resultQuery.items;\r\n      this.setState(prewState => ({\r\n        githubRepos: resultQuery.items.map(item => {\r\n          const createdDate = new Date(item.created_at);\r\n          return {\r\n            id: item.id,\r\n            title: item.name,\r\n            owner: item.owner.login,\r\n            stars: item.stargazers_count,\r\n            createAt: `${createdDate.getFullYear()}-${\r\n              createdDate.getMonth() < 9\r\n                ? `0${createdDate.getMonth() + 1}`\r\n                : `${createdDate.getMonth() + 1}`\r\n            }-${\r\n              createdDate.getDate() < 10\r\n                ? `0${createdDate.getDate()}`\r\n                : `${createdDate.getDate()}`\r\n            }`,\r\n          };\r\n        }),\r\n        pages: resultQuery.items.length / prewState.numberOfRows,\r\n      }));\r\n    } else if (resultQuery.errors) {\r\n      let errors = \"I'hv got errors:\";\r\n      resultQuery.errors.forEach(element => {\r\n        errors += `\\n${element.message}`;\r\n      });\r\n      // this will change when do this \"story\" https://trello.com/c/R8O7cPac\r\n      // eslint-disable-next-line no-alert\r\n      alert(errors);\r\n    }\r\n  }\r\n\r\n  async goToPage(pagesNumber) {\r\n    this.setState(prevState => ({\r\n      actualPage: pagesNumber,\r\n      startShowResultByItem: (pagesNumber - 1) * prevState.numberOfRows,\r\n    }));\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  changeNumberOfShownRows(newNumber) {\r\n    const _newNumber = parseInt(newNumber, 10);\r\n    this.setState(\r\n      prevState => ({\r\n        numberOfRows: _newNumber,\r\n        pages: Math.round(\r\n          (prevState.pages * prevState.numberOfRows) / _newNumber\r\n        ),\r\n      }),\r\n      () => this.goToPage(1)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"section\">\r\n        <div className=\"columns\">\r\n          <div className=\"column is-three-fifths is-offset-one-fifth-desktop is-12-touch\">\r\n            <div className=\"columns is-multiline\">\r\n              <div className=\"column is-full\">\r\n                <SearchBar\r\n                  onChange={text => this.searchInGithubRepositories(text)}\r\n                />\r\n              </div>\r\n              <div className=\"column is-full has-text-right\">\r\n                <SelectorHowRows\r\n                  maxNumberOfRows={20}\r\n                  stepBy={5}\r\n                  onChange={newNumber =>\r\n                    this.changeNumberOfShownRows(newNumber)\r\n                  }\r\n                />\r\n                <span> rows per page</span>\r\n              </div>\r\n              <div className=\"column is-full\">\r\n                <ResultTable\r\n                  startItemBy={this.state.startShowResultByItem}\r\n                  numberOfRows={this.state.numberOfRows}\r\n                  tableHeadStructure={this.state.tableHeadStructure}\r\n                >\r\n                  {this.state.githubRepos}\r\n                </ResultTable>\r\n              </div>\r\n              <div className=\"column is-full has-text-centered\">\r\n                <Pagination\r\n                  pagesNumber={this.state.pages}\r\n                  actualPage={this.state.actualPage}\r\n                  onClick={newPage => this.goToPage(newPage)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}