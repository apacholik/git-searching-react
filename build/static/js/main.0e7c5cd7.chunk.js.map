{"version":3,"sources":["components/ResultTable.jsx","components/SearchBar.jsx","components/Pagination.jsx","components/SelectorHowRows.jsx","App.js","serviceWorker.js","index.js"],"names":["ResultTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","sort","by","isOrderByDESC","type","sortBy","_this2","arguments","length","undefined","setState","prevState","onChangeSorting","objectSpread","_this3","resultModifier","convertFunction","Function","concat","children","a","b","_this4","sorting","numberOfRows","react_default","createElement","className","ResultTable_TableHead","onClick","changeSorting","sortIco","slice","startItemBy","map","row","key","id","title","owner","stars","createAt","React","Component","TableHead","_ref","sortIcons","Number","SearchBar","render","placeholder","onChange","delayForWriteEnd","ref","inputRef","timeoutFingerprint","createRef","clearInterval","setTimeout","ReferenceError","current","value","Pagination","_this$props","pagesNumber","actualPage","buttons","_loop","i","push","SelectorHowRows","maxNumberOfRows","stepBy","options","e","target","App","githubRepos","pages","startShowResultByItem","query","searchParameters","URLSearchParams","set","fetch","toString","then","res","json","resultQuery","items","prewState","item","createdDate","Date","created_at","name","login","stargazers_count","getFullYear","getMonth","getDate","errors","forEach","element","message","alert","window","scrollTo","newNumber","_newNumber","parseInt","Math","round","goToPage","SearchBar_SearchBar","text","searchInGithubRepositories","SelectorHowRows_SelectorHowRows","changeNumberOfShownRows","ResultTable_ResultTable","Pagination_Pagination","newPage","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e7c5cd7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class ResultTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sort: {\r\n        by: 'stars',\r\n        isOrderByDESC: true,\r\n        type: 'Number',\r\n      },\r\n    };\r\n  }\r\n\r\n  changeSorting(sortBy, type = '') {\r\n    if (sortBy === this.state.sort.by)\r\n      this.setState(\r\n        prevState => ({\r\n          sort: {\r\n            by: prevState.sort.by,\r\n            isOrderByDESC: !prevState.sort.isOrderByDESC,\r\n            type: prevState.sort.type,\r\n          },\r\n        }),\r\n        () => {\r\n          if (this.props.onChangeSorting)\r\n            this.props.onChangeSorting({ ...this.state.sort });\r\n        }\r\n      );\r\n    else\r\n      this.setState(\r\n        () => ({\r\n          sort: {\r\n            by: sortBy,\r\n            isOrderByDESC: true,\r\n            type,\r\n          },\r\n        }),\r\n        () => {\r\n          if (this.props.onChangeSorting)\r\n            this.props.onChangeSorting({ ...this.state.sort });\r\n        }\r\n      );\r\n  }\r\n\r\n  sorting() {\r\n    let resultModifier = this.state.sort.isOrderByDESC ? -1 : 1;\r\n    if (this.state.sort.type === 'String') resultModifier *= -1;\r\n    // eslint-disable-next-line no-new-func\r\n    const convertFunction = Function(`return ${this.state.sort.type}`)();\r\n    this.props.children.sort((a, b) => {\r\n      if (\r\n        convertFunction(a[this.state.sort.by]) ===\r\n        convertFunction(b[this.state.sort.by])\r\n      )\r\n        return 0;\r\n      if (\r\n        convertFunction(a[this.state.sort.by]) >\r\n        convertFunction(b[this.state.sort.by])\r\n      )\r\n        return 1 * resultModifier;\r\n      return -1 * resultModifier;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    this.sorting();\r\n    const numberOfRows = this.props.numberOfRows || 5;\r\n    return (\r\n      <table className=\"table is-fullwidth table is-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <TableHead\r\n              className=\"has-text-right\"\r\n              onClick={() => this.changeSorting('id', 'Number')}\r\n              sortIco={\r\n                this.state.sort.by === 'id'\r\n                  ? this.state.sort.isOrderByDESC\r\n                  : undefined\r\n              }\r\n            >\r\n              ID\r\n            </TableHead>\r\n            <TableHead\r\n              onClick={() => this.changeSorting('title', 'String')}\r\n              sortIco={\r\n                this.state.sort.by === 'title'\r\n                  ? this.state.sort.isOrderByDESC\r\n                  : undefined\r\n              }\r\n            >\r\n              Repo Title\r\n            </TableHead>\r\n            <TableHead\r\n              onClick={() => this.changeSorting('owner', 'String')}\r\n              sortIco={\r\n                this.state.sort.by === 'owner'\r\n                  ? this.state.sort.isOrderByDESC\r\n                  : undefined\r\n              }\r\n            >\r\n              Owner\r\n            </TableHead>\r\n            <TableHead\r\n              onClick={() => this.changeSorting('stars', 'Number')}\r\n              sortIco={\r\n                this.state.sort.by === 'stars'\r\n                  ? this.state.sort.isOrderByDESC\r\n                  : undefined\r\n              }\r\n            >\r\n              Stars\r\n            </TableHead>\r\n            <TableHead\r\n              onClick={() => this.changeSorting('createAt', 'String')}\r\n              sortIco={\r\n                this.state.sort.by === 'createAt'\r\n                  ? this.state.sort.isOrderByDESC\r\n                  : undefined\r\n              }\r\n            >\r\n              Create at\r\n            </TableHead>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.children\r\n            .slice(\r\n              this.props.startItemBy,\r\n              numberOfRows + this.props.startItemBy\r\n            )\r\n            .map(row => (\r\n              <tr key={row.id}>\r\n                <td className=\"has-text-centered\">{row.id}</td>\r\n                <td className=\"has-text-centered\">{row.title}</td>\r\n                <td className=\"has-text-centered\">{row.owner}</td>\r\n                <td className=\"has-text-centered\">{row.stars}</td>\r\n                <td className=\"has-text-centered\">{row.createAt}</td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport const TableHead = ({ children, onClick, className, sortIco }) => {\r\n  const sortIcons = [\r\n    <span key=\"desc\" className=\"icon\">\r\n      <i className=\"fas fa-sort-down\" />\r\n    </span>,\r\n    <span key=\"asc\" className=\"icon\">\r\n      <i className=\"fas fa-sort-up\" />\r\n    </span>,\r\n  ];\r\n  return (\r\n    <th\r\n      className={className === undefined ? 'has-text-centered' : className}\r\n      onClick={() => onClick()}\r\n    >\r\n      {sortIco !== undefined ? sortIcons[Number(sortIco)] : ''}\r\n      {children}\r\n    </th>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nexport default class SearchBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.timeoutFingerprint = null;\r\n    this.inputRef = new React.createRef();\r\n  }\r\n\r\n  delayForWriteEnd() {\r\n    clearInterval(this.timeoutFingerprint);\r\n    this.timeoutFingerprint = setTimeout(() => {\r\n      if (this.props.onChange) this.props.onChange(this.inputRef.current.value);\r\n      else throw new ReferenceError('Not add props onChange');\r\n    }, 1500);\r\n  }\r\n\r\n  render = () => (\r\n    <div className=\"control has-icons-right\">\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        onChange={() => this.delayForWriteEnd()}\r\n        ref={this.inputRef}\r\n      />\r\n      <span className=\"icon is-small is-right\">\r\n        <i className=\"fas fa-search\" />\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Pagination extends Component {\r\n  render() {\r\n    const { pagesNumber, onClick } = this.props;\r\n    const actualPage = this.props.actualPage || 1;\r\n    if (!onClick) throw new ReferenceError('Not add props onChange');\r\n    const buttons = [];\r\n    for (let i = 1; i <= pagesNumber; i++)\r\n      buttons.push(\r\n        // eslint-disable-next-line react/button-has-type\r\n        <button\r\n          key={i}\r\n          className={`button is-text ${actualPage === i ? 'is-active' : ''}`}\r\n          onClick={() => onClick(i)}\r\n        >\r\n          {i}\r\n        </button>\r\n      );\r\n    return buttons;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class SelectorHowRows extends Component {\r\n  render() {\r\n    const { maxNumberOfRows, stepBy } = this.props;\r\n    const options = [];\r\n    for (let i = stepBy; i <= maxNumberOfRows; i += stepBy) {\r\n      options.push(\r\n        <option key={i} value={i}>\r\n          {i}\r\n        </option>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"select is-small\">\r\n        <select\r\n          onChange={e => {\r\n            this.props.onChange(e.target.value);\r\n          }}\r\n        >\r\n          {options}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport 'bulma';\nimport '@fortawesome/fontawesome-free/js/all';\nimport ResultTable from './components/ResultTable.jsx';\nimport SearchBar from './components/SearchBar.jsx';\nimport Pagination from './components/Pagination.jsx';\nimport SelectorHowRows from './components/SelectorHowRows.jsx';\n\nconst GITHUB_SEARCH_URL = 'https://api.github.com/search/repositories';\nconst GITHUB_BASES_PARAMETERS = 'q=test&sort=stars&order=desc&page=1';\n\nclass App extends Component {\n  // eslint-disable-next-line no-useless-constructor\n  constructor() {\n    super();\n    this.state = {\n      githubRepos: [],\n      pages: 0,\n      actualPage: 1,\n      startShowResultByItem: 0,\n      numberOfRows: 5,\n    };\n  }\n\n  async searchInGithubRepositories(query) {\n    this.searchParameters = new URLSearchParams(GITHUB_BASES_PARAMETERS);\n    this.searchParameters.set('q', query);\n    const resultQuery = await fetch(\n      `${GITHUB_SEARCH_URL}?${this.searchParameters.toString()}`\n    ).then(res => res.json());\n    if (resultQuery.items) {\n      this.setState(prewState => ({\n        githubRepos: resultQuery.items.map(item => {\n          const createdDate = new Date(item.created_at);\n          return {\n            id: item.id,\n            title: item.name,\n            owner: item.owner.login,\n            stars: item.stargazers_count,\n            createAt: `${createdDate.getFullYear()}-${\n              createdDate.getMonth() < 9\n                ? `0${createdDate.getMonth() + 1}`\n                : `${createdDate.getMonth() + 1}`\n            }-${\n              createdDate.getDate() < 10\n                ? `0${createdDate.getDate()}`\n                : `${createdDate.getDate()}`\n            }`,\n          };\n        }),\n        pages: resultQuery.items.length / prewState.numberOfRows,\n      }));\n    } else if (resultQuery.errors) {\n      let errors = \"I'hv got errors:\";\n      resultQuery.errors.forEach(element => {\n        errors += `\\n${element.message}`;\n      });\n      // this will change when do this \"story\" https://trello.com/c/R8O7cPac\n      // eslint-disable-next-line no-alert\n      alert(errors);\n    }\n  }\n\n  async goToPage(pagesNumber) {\n    this.setState(prevState => ({\n      actualPage: pagesNumber,\n      startShowResultByItem: (pagesNumber - 1) * prevState.numberOfRows,\n    }));\n    window.scrollTo(0, 0);\n  }\n\n  changeNumberOfShownRows(newNumber) {\n    const _newNumber = parseInt(newNumber, 10);\n    this.setState(\n      prevState => ({\n        numberOfRows: _newNumber,\n        pages: Math.round(\n          (prevState.pages * prevState.numberOfRows) / _newNumber\n        ),\n      }),\n      () => this.goToPage(1)\n    );\n  }\n\n  render() {\n    return (\n      <section className=\"section\">\n        <div className=\"columns\">\n          <div className=\"column is-three-fifths is-offset-one-fifth\">\n            <div className=\"columns is-multiline\">\n              <div className=\"column is-full\">\n                <SearchBar\n                  onChange={text => this.searchInGithubRepositories(text)}\n                />\n              </div>\n              <div className=\"column is-full has-text-right\">\n                <SelectorHowRows\n                  maxNumberOfRows={20}\n                  stepBy={5}\n                  onChange={newNumber =>\n                    this.changeNumberOfShownRows(newNumber)\n                  }\n                />\n                <span> rows per page</span>\n              </div>\n              <div className=\"column is-full\">\n                <ResultTable\n                  startItemBy={this.state.startShowResultByItem}\n                  numberOfRows={this.state.numberOfRows}\n                >\n                  {this.state.githubRepos}\n                </ResultTable>\n              </div>\n              <div className=\"column is-full has-text-centered\">\n                <Pagination\n                  pagesNumber={this.state.pages}\n                  actualPage={this.state.actualPage}\n                  onClick={newPage => this.goToPage(newPage)}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          // eslint-disable-next-line\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              // eslint-disable-next-line no-console\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              // eslint-disable-next-line no-console\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      // eslint-disable-next-line no-console\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      // eslint-disable-next-line no-console\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}